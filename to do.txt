to do

- make the deployed track more than one deployment of the contract
- make the compiler compile and link multi class and library contracts




notes:

truffle probably uses a contract on the chain to track deployments because then it has a record of what's been deployed on that specific chain, if it stores the info locally then it might be deploying to a different chain



pragma solidity ^0.4.1;   contract Prescription {      address doctor_id;     address patient_id;      struct Details {         string drug;         uint dose;         string freq;         uint num_days;     }      Details p_details;  \tfunction Prescription(string _drug, uint _dose, string _freq, uint _num_days ) { \t\tdoctor_id = msg.sender; \t\tp_details.drug = _drug; \t\tp_details.dose = _dose; \t\tp_details.freq = _freq; \t\tp_details.num_days = _num_days; \t}      function set_drug(string drug) {p_details.drug = drug;}     function set_dose(uint dose) {p_details.dose = dose;}     function set_freq(string freq) {p_details.freq = freq;}     function set_num_days(uint num_days) {p_details.num_days = num_days;}      function get_drug() constant returns (string) { return p_details.drug;}     function get_dose() constant returns (uint) { return p_details.dose;}     function get_freq() constant returns (string) { return p_details.freq;}     function get_num_days() constant returns (uint) { return p_details.num_days;}  }   \n